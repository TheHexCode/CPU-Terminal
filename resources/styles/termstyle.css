body
{
	--fg-color: var(--main-fg-color);
	--bg-color: var(--main-bg-color);
	--border-color: var(--main-border-color);

	height: 98vh;
	margin: 0;
	padding: 0.5rem;
	font-family: "BigBlue-TerminalPlus";
	font-size: 1em;
	background: var(--bg-color);
	color: var(--fg-color);
	text-shadow: 0 0 0px;
}

body.bricked
{
	--fg-color: var(--bricked-fg-color);
	--bg-color: var(--bricked-bg-color);
}

body.rooting
{
	--fg-color: var(--root-fg-color);
	--bg-color: var(--root-bg-color);
	--border-color: var(--root-border-color);
}

body::before,
body::after
{
	content:"";
	background: linear-gradient(to bottom, #666, #AAA);
    mix-blend-mode: overlay;
    background-repeat: repeat;
	background-size: 100% 2px;
	pointer-events: none;
    inset: 0;
    position: fixed;
    z-index: 999;
	width: 100%;
	height: 100%;
}

#rigged
{
	max-height: 100px;
	max-width: 100px;
}

.red
{
	color: var(--red);
}

.amber
{
	--gem-color: var(--amber);
}

.blue
{
	--gem-color: var(--blue);
}

.clear
{
	--gem-color: var(--dimgrey);
}

@keyframes gemBlend
{
	0% {
		background-color: var(--amber);
	}
	100% {
		background-color: var(--blue);
	}
}

@keyframes textBlend
{
	0% {
		color: var(--amber);
		border-color: var(--amber);
	}
	100% {
		color: var(--blue);
		border-color: var(--blue);
	}
}

.gem.blend
{
	animation: gemBlend ease-in-out;
	animation-iteration-count: infinite;
	animation-direction: alternate;
    animation-duration: 2s;
    animation-fill-mode: both;
}

.lcdBox.blend
{
	animation: textBlend ease-in-out;
	animation-iteration-count: infinite;
	animation-direction: alternate;
    animation-duration: 2s;
    animation-fill-mode: both;
}

@keyframes gemNegative
{
	0% {
		background-color: var(--red);
	}
	100% {
		background-color: var(--grey);
	}
}

.gem.negative
{
	animation: gemNegative ease-in-out;
	animation-iteration-count: infinite;
	animation-direction: alternate;
    animation-duration: 2s;
    animation-fill-mode: both;
}

@keyframes gemRoot
{
	0% {
		background-color: var(--red);
	}
	100% {
		background-color: var(--dk-red);
	}
}

.gem.root
{
	animation: gemRoot ease-in-out;
	animation-iteration-count: infinite;
	animation-direction: alternate;
    animation-duration: 1s;
    animation-fill-mode: both;
}

button
{
	font-family: "BigBlue-TerminalPlus";
	background-color: var(--fg-color);
	color: var(--bg-color);
	border-color: var(--bg-color);
	border-radius: 0.25rem;
	border-width: 2px;
	box-shadow: 0 0 0.5rem var(--fg-color);
	font-size: 0.9rem;
}

button:disabled
{
	filter: brightness(50%);
	box-shadow: none;
}

button:not(:disabled):not(.disabled):not(.hackTab):hover
{
	box-shadow: 0 0 1rem var(--fg-color);
}

button:not(:disabled):not(.disabled):not(.hackTab):active
{
	filter: brightness(75%);
	box-shadow: 0 0 1rem var(--fg-color);
}

h2
{
	margin: 0.5rem;
	text-decoration: underline;
}

#main
{
	height: 100%;
	display: flex;
	flex-direction: column;
	row-gap: 0.25rem;
	max-width: var(--max-main-width);
	margin: 0 auto;
}

#main.hidden
{
	display: none;
}

#gemBar
{
	display: flex;
	flex-direction: row;
	column-gap: 0.25rem;
	border: 0.5rem solid var(--border-color);
	padding: 0.25rem;
}

#gemContainer
{
	display: flex;
	flex-direction: row;
	column-gap: 0.25rem;
	flex-grow: 1;
}

.gemPair
{
	display: flex;
	flex-direction: column;
	flex-grow: 1;
	align-items: stretch;
}

.gem
{
	background-color: var(--gem-color,var(--grey));
	border: 0.25rem inset black;
	flex-grow: 1;
}

#gemTens
{
	display: flex;
	flex-direction: column;
	align-items: center;
}

.dimmed
{
	filter: brightness(50%);
	text-shadow: none;
}

.infoTitle
{
	display: flex;
	flex-direction: row;
	border: 0.5rem solid var(--border-color);
	align-items: center;
	text-align: center;
	justify-content: space-around;
	padding: 0.25rem;
}

.infoBox
{
	display: flex;
	flex-direction: column;
	border: 0.5rem solid var(--border-color);
	align-items: center;
	text-align: center;
	padding: 0.25rem;
}

.lcdBox
{
	display: grid;
	/*border: 5px inset black;*/
	color: var(--gem-color,var(--fg-color));
	border: 2px solid var(--gem-color,var(--fg-color));
	border-radius: 0.5rem;
	width: fit-content;
	padding: 0.25rem;
	font-size: 1.25rem;
	/*background-color: #77894D;/*#535A38;*/
	/*color: #0D1C23/*#1B1C14;*/
}

.timerContainer
{
	display: flex;
	flex-direction: row;
	justify-content: center;
	/*column-gap: 0.5rem;*/
	/*margin-top: 0.5rem;*/
}

.lcdBox
{
	display: grid;
	grid-template-columns: [clockstart] max-content [clockmid] 1fr [end];
	grid-template-rows: [start] auto [hundstart] min-content [end];
}
/*
#ppContainer
{
	grid-row: start / end;
	grid-column: start / clockstart;
}

#playPause
{
	background-color: var(--bg-color);
	border-color: var(--fg-color);
	box-shadow: 0 0 0px;
	padding: 4px 0 0 0;
}
*/

.lcdBox > .mmss
{
	grid-row: start / end;
	grid-column: clockstart / clockmid;
	display: grid;
	font-size: 200%;
}

.lcdBox > .hundsec
{
	grid-row: hundstart / end;
	grid-column: clockmid / end;
	display: grid;
	font-size: 100%;
	text-align: left;
}

.zoneBox
{
	flex-grow: 1;
	display: flex;
	flex-direction: column;
	row-gap: 0.25rem;
	border: 0.5rem solid var(--border-color);
	/*padding: 0.25rem;*/
}

.accessBox
{
	display: flex;
	flex-direction: column;
	row-gap: 0.25rem;
	align-items: center;
	justify-content: flex-start;
	/*border: 1px solid black;/*
	/*padding: 0.25rem;*/
	padding: 8px;
	border-image-source: url("../images/borders/corner_border.png");
	border-image-width: 16px;
	border-image-slice: 16;
}

.accessTagBox
{
	flex-grow: 1;
	display: flex;
	flex-direction: column;
	row-gap: 0.25rem;
	align-items: stretch;
	/*border: 1px solid black;
	padding: 0.25rem;*/
}

.accessTagRow
{
	display: flex;
	flex-direction: row;
	/*border: 1px solid black;*/
	column-gap: 0.25rem;
}

.accessTagRow > .accessBox
{
	flex-grow: 1;
}

.accessHeader
{
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	justify-content: center;
	text-align: center;
	width: fit-content;
}

#payloadBox
{
	display: flex;
	flex-direction: column;
	row-gap: 1rem;
	align-items: center;
	justify-content: flex-start;
	padding: 0.5rem;
	border: 1px solid var(--fg-color);
	border-radius: 0.5rem;
	margin: 0 0.5rem;
}

#payloadBox.noPayload
{
	border-color: var(--dimred);
	background: repeating-linear-gradient(
		-45deg,
		var(--dimred) 0 0.75rem,
		var(--bg-color) 0.75rem 1.5rem
	);
	text-shadow:
		 2px  2px 5px var(--bg-color),
		 2px -2px 5px var(--bg-color),
		-2px -2px 5px var(--bg-color),
		-2px  2px 5px var(--bg-color);
}

#payloadCodeHeader
{
	margin-bottom: -1rem;
}

#payloadCodeRow
{
	display: grid;
	/*
	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	column-gap: 0.25rem;
	*/
	background-color: var(--bg-color);
	border: 2px solid var(--fg-color);
	border-radius: 0.5rem;
	padding: 0.5rem;
}

.codeBox
{
	display: grid;
	/*
	border-image-source: url("../images/borders/corner_border.png");
	border-image-width: 8px;
	border-image-slice: 8;
	padding: 8px;
	*/
}

#payloadCodeRow .BG
{
	pointer-events: none;
	font-size: 200%;
}

#payloadCodeInput
{
	-moz-appearance: textfield;
	background-color: var(--trans-clear);
	color: var(--fg-color);
	text-shadow: none;
	border: none;
	font-size: 200%;
	padding: 0;
}

#payloadCodeInput::-webkit-outer-spin-button,
#payloadCodeInput::-webkit-inner-spin-button
{
	-webkit-appearance: none;
	margin: 0;
}

#payloadCodeInput:focus
{
	outline: none;
}

.multiLineTextInput
{
	display: grid;
	grid-template-columns: [start] 1rem [tab] auto [end];
	width: 100%;
}

.multiLineTextInput label
{
	grid-row: 1;
	grid-column: start / end;
}

.multiLineTextInput .middleText
{
	grid-row: 2;
	grid-column: tab / end;
}

.multiLineTextInput input
{
	grid-row: 3;
	grid-column: tab / end;
}

.payDetails
{
	/* 271px/0.72rem -> 400px/1rem */
	font-size: clamp(0.72rem, 3.473vw + 0.132rem, 1rem);
}

#hackDetails
{
	display: flex;
	flex-direction: column;
}

.tagInterface
{
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: space-around;
	column-gap: 0.25rem;
	width: 100%;
	margin: auto 0;
}

.extraButton
{
	--fg-color: var(--blue);
}

.accessList
{
	list-style-type: none;
	padding: 0 0 0 0.25rem;
}

#terminalButton
{
	margin: auto 10px 10px 10px;
	height: 3rem;
}

#terminalButton.noPayload
{
	background-color: var(--red);
}

#hackZone
{
	display: none;
	border: none;
	row-gap: 0;
	padding: 0;
}

#hackTabContainer
{
	/*overflow: hidden;*/
	display: flex;
}

.hackTab
{
	flex-grow: 1;
	cursor: pointer;
	padding: 0.25rem 0 0.5rem 0;
	border: 0.5rem solid var(--border-color);
	border-radius: 0;
	background-color: var(--bg-color);
	color: var(--fg-color);
	/*border-color: var(--bg-color);*/
	box-shadow: none;
}

.hackTab:hover
{
	box-shadow: none;
}

.hackTab.active
{
	z-index: 75;
	border-bottom: none;
	margin: 0;
}

.hackTab:first-of-type:not(.active)
{
	margin: 0.5rem -0.5rem 0 0; /*0.5rem 0.5rem 0 -0.5rem;*/
	border-color: var(--inactive-border-color);
}

.hackTab:last-of-type:not(.active)
{
	margin: 0.5rem 0 0 -0.5rem; /*0.5rem 0.5rem 0 -0.5rem;*/
	border-color: var(--inactive-border-color);
}

#hackBox
{
	flex-grow: 1;
	display:flex;
	flex-direction: column;
	z-index: 50;
	border-top: 0.5rem solid var(--border-color);
	margin-top: -0.5rem;
	border-bottom: 0.5rem solid var(--border-color);
}

.hackBody
{
	flex-grow: 1;
	min-width: 0;
	display: flex;
	flex-direction: row;
}

.hackBody:not(.active)
{
	display: none;
}

#termBody
{
	border-right: 0.5rem solid var(--border-color);
}

#deckBody
{
	border-left: 0.5rem solid var(--border-color);
}

.subTabCol
{
	display: flex;
	flex-direction: column;
}

.subTabInset
{
	display: flex;
	flex-direction: column;
	justify-content: space-evenly;
	border-top: 0.5rem solid var(--border-color);
	border-bottom: 0.5rem solid var(--border-color);
}

#termSubTabs
{
	border-right: 0.5rem solid var(--border-color);
}

#deckSubTabs
{
	border-left: 0.5rem solid var(--border-color);
}

.subFill
{
	flex-grow: 1;
}

#termSubFill
{
	border-left: 0.5rem solid var(--border-color);
}

#deckSubFill
{
	border-right: 0.5rem solid var(--border-color);
}

.subTab
{
	border: 1px solid var(--black);
	margin-top: 0.25rem;
	cursor: pointer;
	text-align: center;
	width: 30px;
	height: 30px;
}

#termSubTabs .subTab
{
	border-right: none;
	border-radius: 0.25rem 0 0 0.25rem;
	margin-left: 0.25rem;
}

#deckSubTabs .subTab
{
	border-left: none;
	border-radius: 0 0.25rem 0.25rem 0;
	margin-right: 0.25rem;
}

/*
.subTab.active
{
	--fg-color: var(--fg-color);
}
*/

.subTab.inactive
{
	--fg-color: var(--blue);
}

.subTab.disabled
{
	--fg-color: var(--dimgrey);
	box-shadow: none;
	cursor: initial;
}

.subTab.disabled:hover
{
	box-shadow: none;
}

.subTab:last-child
{
	margin-bottom: 0.25rem;
}

.subTab img
{
	display: block;
	max-width: 100%;
	max-height: 100%;
	object-fit: contain;
	margin: auto;
	pointer-events: none;
}

.entryTitleBar
{
	display: grid;
	grid-template-columns: min-content 
}

.subContentContainer
{
	flex-grow: 1;
	min-width: 0;
}

.subContent
{
	display: flex;
	flex-direction: column;
	margin: 0 0.25rem 0 0.25rem;
}

.subContent:not(.active)
{
	display: none;
}

.subContTitleRow
{
	display: grid;
	grid-template-columns: [start] 1fr [titlestart] minmax(auto,max-content) [titleend] 1fr;
	grid-template-rows: min-content min-content;
	column-gap: 0.25rem;
	margin: 0 0 0.25rem 0;
}

.subContRepeatBox
{
	display: flex;
	flex-direction: column;
	row-gap: 0.25rem;
	justify-content: center;
	border-image-source: url("../images/borders/corner_border.png");
	border-image-width: 16px;
	border-image-slice: 16;
	padding: 0.5rem 0 0.5rem 0;
}

.subContRepeatTitle
{
	display: flex;
	justify-content: center;
	text-decoration: underline;
}

.subContRepeatAM
{
	display: flex;
	flex-direction: row;
	justify-content: space-around;
}

.subContRepeatIndicator
{
	border: 1px solid var(--fg-color);
	padding: 0.25rem 0.2rem 0 0.25rem;
	pointer-events: none;
	box-shadow: 0 0 0.5rem var(--fg-color);
}

.subContRepeatIndicator.dimmed
{
	box-shadow: 0 0 0;
}

/*
.subContRepeat
{
	grid-column: start / titlestart;
	grid-row: 1;
	text-align: center;
}

.subContJohnny
{
	grid-column: start / titlestart;
	grid-row: 2;
	text-align: center;
}
*/

.subContTitle
{
	grid-column: titlestart / titleend;
	grid-row: 1 / 3;
	text-align: center;
	text-decoration: underline;
	margin: auto;
}

.subContBody
{
	border-image-source: url("../images/borders/corner_border.png");
	border-image-width: 16px;
	border-image-slice: 16;
	padding: 16px;
	overflow: hidden;
}

#logList
{
	margin: 0;
	padding-left: 0.5rem;
}

.logEntry
{
	margin: 1rem;
}

.logEntry.itsYou
{
	color: var(--blue);
}

.logEntry hr
{
	margin: 0.25rem 0;
}

.logActions
{
	display: flex;
	flex-direction: column;
}

.buttonItem
{
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
}

.itemTitle
{
	text-align: center;
	text-decoration: underline;
}

.buttonLI
{
	list-style-type: circle;
	display: grid;
	grid-template-rows: min-content min-content;
}

.itemName
{
	grid-row: 1;
	width: 100%;
	text-align: left;
}

.itemInterface
{
	grid-row: 2;
	width: 100%;
	text-align: right;
}

.itemMarks img
{
	vertical-align: middle;
	margin: 0 0.5rem 0 0;
}

ul
{
	margin: 0;
	padding: 0 0 0 1rem;
}

#actList li
{
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	justify-content: space-between;
	align-items: center;
	margin: 0.25rem 0 0.25rem 0;
}

.entry
{
	display: flex;
	flex-direction: column;
	row-gap: 0.25rem;
}

.entry hr
{
	margin: 0 0 1rem 0;
}

.ice
{
	--fg-color: var(--ice-fg-color);
	--bg-color: var(--ice-bg-color);
	--border-color: var(--ice-border-color);
}

.entry.ice
{
	margin: 0 -0.5rem -0.5rem -0.5rem;
	padding: 0.25rem;
	color: var(--fg-color);
	background-color: var(--bg-color);
	border: 0.5rem solid var(--border-color);
	overflow: hidden;
}

.subIce
{
	filter: blur(0.5rem);
	overflow: hidden;
	pointer-events: none;
	user-select: none;
}

.entry.ice .entry.ice
{
	border-width: 0.5rem 0;
	margin: 0 -0.25rem;
}

/*
.entry.ice .entry.ice:not(.subIce)::before
{
	content: "";
	background-color: #FFAC00;
}
*/

.entryTitleBar
{
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
}

.entryPrefix
{
	white-space: nowrap;
	margin-right: 0.5rem;
}

.entryMaskContainer
{
	flex-grow: 1;
	display: grid;
}

@keyframes entryMaskNoise
{
	from
	{
		background-size: 100% 100%;
	}
	to
	{
		background-size: 200% 200%;
	}
}

/*https://css-tricks.com/nailing-that-cool-dissolve-transition/*/

.entryMasking
{
	grid-row: 1;
	grid-column: 1;
	/*background-image: repeating-radial-gradient(circle at 17% 32%, white, black 0.00085px);*/
	background-image: repeating-radial-gradient(circle at 17% 18%, var(--fg-color), var(--bg-color) 0.00055px);
	background-position: center;
	animation: entryMaskNoise 5s linear infinite;
	pointer-events: none;
	z-index: 5;
}

.entrySecret
{
	grid-row: 1;
	grid-column: 1;
	z-index: 1;
	padding: 0 0.15rem 0 0.15rem;
}

.sprung
{
	color: var(--red);
	text-shadow: 0px 0px 2px var(--black);
}

.disarmed, .broken
{
	text-decoration: line-through;
}

.entryContentsBar
{
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: stretch;
	text-align: center;
	border-image-source: url("../images/borders/bracket_border.png");
	border-image-width: 14px;
	border-image-slice: 14;
	padding: 0 14px;
}

.ice .entryContentsBar
{
	border-image-source: url("../images/borders/bracket_border_ice.png");
}

.entryContents
{
	display: flex;
	flex-wrap: nowrap;
}

.entryIntContainer
{
	column-count: 2;
	column-width: 140px;
	column-rule: 2px solid var(--grey);
}

.entryInterface
{
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
}

.entryInterface > button
{
	white-space: nowrap;
	margin: 0.15rem 0 0.15rem 0;
}

.hackSpacer
{
	border-left: 0.5rem solid var(--border-color);
	border-right: 0.5rem solid var(--border-color);
	height: 0.5rem;
}

footer
{
	margin-top: auto;
	align-self: flex-end;
}

#modalBG
{
	display: none;
	justify-content: center;
	align-items: center;
	position: fixed;
	z-index: 100;
	left: 0;
	top: 0;
	width: 100%;
	height: 100%;
	overflow: clip;
	background-color: var(--modal-bg-color);
}

.modalBox
{
	height: auto;
	max-width: var(--max-main-width);
	font-family: "BigBlue-TerminalPlus";
	color: var(--fg-color);
	background-color: var(--bg-color);
	border: 0.5rem solid var(--border-color);
}

.modalHeaderRow
{
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
	padding: 0.5rem;
}

.modalHeaderText
{
	text-decoration: underline;
}

.modalClose {
	color: var(--fg-color);
	float: right;
	font-size: 28px;
	font-weight: bold;
}
  
.modalClose:hover,
.modalClose:focus {
	color: var(--bg-color);
	text-shadow:
		 2px  2px 5px var(--fg-color),
		 2px -2px 5px var(--fg-color),
		-2px -2px 5px var(--fg-color),
		-2px  2px 5px var(--fg-color);
	cursor: pointer;
}

.modalBody
{
	border-style: solid;
	border-width: 0.5rem 0 0.5rem 0;
	border-color: var(--border-color);
	padding: 1rem;
}

.cautionTape
{
	margin-top: 1rem;
	padding: 1.5rem 0 1.5rem 0;
	border-image-source: repeating-linear-gradient(
		-45deg,
		var(--main-fg-color) 0 0.75rem,
		var(--main-bg-color) 0.75rem 1.5rem
	);
	border-image-width: 1rem 0 1rem 0;
	border-image-slice: 30;
}

.modalButtonRow
{
	display: flex;
	flex-direction: row;
	column-gap: 1rem;
	padding: 0.5rem;
}

.modalButtonRow[data-mode="confirm"]
{
	justify-content: flex-end;
}

.modalButtonRow[data-mode="execute"]
{
	justify-content: center;
}

.modalButtonRow button
{
	padding: 0.5rem;
}

#executeButton.active
{
	filter: brightness(75%);
	box-shadow: 0 0 1rem var(--fg-color);
}

.hidden
{
	display: none;
}

.invisible
{
	visibility: hidden;
}